@model CRUDGridTest.Models.CrudItem

<script type="text/html" id="ChangeCrud">
    <div class="shadow" data-bind="style: { display: modalDisplay }"></div>
    <div class="modal" data-bind="style: { display: modalDisplay }">
            <span><input class="close" type="button" value="X" data-bind="click: function () { modalDisplay('none') }"></span>
            <h2 data-bind="text: modalActionName"></h2>
        
        @using (Ajax.BeginForm("Change", new AjaxOptions() { OnComplete = "refreshCrudFunc" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>CrudItem</legend>

                @Html.HiddenFor(model=> model.Id, new { data_bind = "value: current().Id" })

                <div class="editor-label">
                    @Html.LabelFor(model => model.Name)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Name, new { data_bind = "value: current().Name" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Description)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Description, new { data_bind = "value: current().Description" })
                    @Html.ValidationMessageFor(model => model.Description)
                    
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Weight)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Weight, new { data_bind = "value: current().Weight", type = "number" })
                    @Html.ValidationMessageFor(model => model.Weight)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Active)
                </div>
                <div class="editor-field">
                    @Html.CheckBoxFor(model => model.Active, new { data_bind = "checked: current().Active" })
                    @Html.ValidationMessageFor(model => model.Active)

                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Options)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Options)
                    @Html.ValidationMessageFor(model => model.Options)
                </div>

                <p>
                    <input class="submitCrud" type="submit" value="Create" data-bind="click: function () { modalDisplay('none'); return true; }, value: modalActionName" />
                </p>
            </fieldset>
        }

    </div>

</script>


